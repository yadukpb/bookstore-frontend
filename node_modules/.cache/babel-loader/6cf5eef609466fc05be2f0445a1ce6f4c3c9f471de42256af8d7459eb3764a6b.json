{"ast":null,"code":"\"use strict\";\n\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* global window */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCrypto = createCrypto;\nexports.hasBrowserCrypto = hasBrowserCrypto;\nexports.fromArrayBufferToHex = fromArrayBufferToHex;\nconst crypto_1 = require(\"./browser/crypto\");\nconst crypto_2 = require(\"./node/crypto\");\nfunction createCrypto() {\n  if (hasBrowserCrypto()) {\n    return new crypto_1.BrowserCrypto();\n  }\n  return new crypto_2.NodeCrypto();\n}\nfunction hasBrowserCrypto() {\n  return typeof window !== 'undefined' && typeof window.crypto !== 'undefined' && typeof window.crypto.subtle !== 'undefined';\n}\n/**\n * Converts an ArrayBuffer to a hexadecimal string.\n * @param arrayBuffer The ArrayBuffer to convert to hexadecimal string.\n * @return The hexadecimal encoding of the ArrayBuffer.\n */\nfunction fromArrayBufferToHex(arrayBuffer) {\n  // Convert buffer to byte array.\n  const byteArray = Array.from(new Uint8Array(arrayBuffer));\n  // Convert bytes to hex string.\n  return byteArray.map(byte => {\n    return byte.toString(16).padStart(2, '0');\n  }).join('');\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","createCrypto","hasBrowserCrypto","fromArrayBufferToHex","crypto_1","require","crypto_2","BrowserCrypto","NodeCrypto","window","crypto","subtle","arrayBuffer","byteArray","Array","from","Uint8Array","map","byte","toString","padStart","join"],"sources":["/home/yadu/Music/Gifty/node_modules/google-auth-library/build/src/crypto/crypto.js"],"sourcesContent":["\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* global window */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createCrypto = createCrypto;\nexports.hasBrowserCrypto = hasBrowserCrypto;\nexports.fromArrayBufferToHex = fromArrayBufferToHex;\nconst crypto_1 = require(\"./browser/crypto\");\nconst crypto_2 = require(\"./node/crypto\");\nfunction createCrypto() {\n    if (hasBrowserCrypto()) {\n        return new crypto_1.BrowserCrypto();\n    }\n    return new crypto_2.NodeCrypto();\n}\nfunction hasBrowserCrypto() {\n    return (typeof window !== 'undefined' &&\n        typeof window.crypto !== 'undefined' &&\n        typeof window.crypto.subtle !== 'undefined');\n}\n/**\n * Converts an ArrayBuffer to a hexadecimal string.\n * @param arrayBuffer The ArrayBuffer to convert to hexadecimal string.\n * @return The hexadecimal encoding of the ArrayBuffer.\n */\nfunction fromArrayBufferToHex(arrayBuffer) {\n    // Convert buffer to byte array.\n    const byteArray = Array.from(new Uint8Array(arrayBuffer));\n    // Convert bytes to hex string.\n    return byteArray\n        .map(byte => {\n        return byte.toString(16).padStart(2, '0');\n    })\n        .join('');\n}\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAGA,YAAY;AACnCF,OAAO,CAACG,gBAAgB,GAAGA,gBAAgB;AAC3CH,OAAO,CAACI,oBAAoB,GAAGA,oBAAoB;AACnD,MAAMC,QAAQ,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC5C,MAAMC,QAAQ,GAAGD,OAAO,CAAC,eAAe,CAAC;AACzC,SAASJ,YAAY,GAAG;EACpB,IAAIC,gBAAgB,EAAE,EAAE;IACpB,OAAO,IAAIE,QAAQ,CAACG,aAAa,EAAE;EACvC;EACA,OAAO,IAAID,QAAQ,CAACE,UAAU,EAAE;AACpC;AACA,SAASN,gBAAgB,GAAG;EACxB,OAAQ,OAAOO,MAAM,KAAK,WAAW,IACjC,OAAOA,MAAM,CAACC,MAAM,KAAK,WAAW,IACpC,OAAOD,MAAM,CAACC,MAAM,CAACC,MAAM,KAAK,WAAW;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,SAASR,oBAAoB,CAACS,WAAW,EAAE;EACvC;EACA,MAAMC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,UAAU,CAACJ,WAAW,CAAC,CAAC;EACzD;EACA,OAAOC,SAAS,CACXI,GAAG,CAACC,IAAI,IAAI;IACb,OAAOA,IAAI,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC7C,CAAC,CAAC,CACGC,IAAI,CAAC,EAAE,CAAC;AACjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}