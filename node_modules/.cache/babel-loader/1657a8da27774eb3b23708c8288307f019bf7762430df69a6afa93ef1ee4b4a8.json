{"ast":null,"code":"var _jsxFileName = \"/home/yadu/Music/Gifty/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./CSS/chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  var _chatHistory$selected;\n  const [message, setMessage] = useState(\"\");\n  const [sellers, setSellers] = useState([{\n    id: 1,\n    name: \"John Smith\",\n    lastSeen: \"online\",\n    avatar: \"/placeholder.jpg\"\n  }, {\n    id: 2,\n    name: \"Sarah Johnson\",\n    lastSeen: \"2 min ago\",\n    avatar: \"/placeholder.jpg\"\n  }, {\n    id: 3,\n    name: \"Mike Williams\",\n    lastSeen: \"1 hour ago\",\n    avatar: \"/placeholder.jpg\"\n  }]);\n  const [selectedSeller, setSelectedSeller] = useState(null);\n  const [chatHistory, setChatHistory] = useState({});\n  const [selectedMessages, setSelectedMessages] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const chatBoxRef = useRef(null);\n\n  // Initialize chat history for each seller\n  useEffect(() => {\n    const initialChats = {};\n    sellers.forEach(seller => {\n      initialChats[seller.id] = [{\n        id: 1,\n        text: \"Hello there!\",\n        sender: seller.id,\n        timestamp: new Date().toLocaleTimeString(),\n        status: \"read\"\n      }];\n    });\n    setChatHistory(initialChats);\n  }, []);\n  const sendMessage = () => {\n    if (message.trim() && selectedSeller) {\n      const newMessage = {\n        id: Date.now(),\n        text: message,\n        sender: \"user\",\n        timestamp: new Date().toLocaleTimeString(),\n        status: \"sent\"\n      };\n      setChatHistory(prev => ({\n        ...prev,\n        [selectedSeller.id]: [...(prev[selectedSeller.id] || []), newMessage]\n      }));\n      setMessage(\"\");\n\n      // Simulate seller response\n      setTimeout(() => {\n        const response = {\n          id: Date.now() + 1,\n          text: \"Thanks for your message! I'll get back to you soon.\",\n          sender: selectedSeller.id,\n          timestamp: new Date().toLocaleTimeString(),\n          status: \"received\"\n        };\n        setChatHistory(prev => ({\n          ...prev,\n          [selectedSeller.id]: [...(prev[selectedSeller.id] || []), response]\n        }));\n      }, 1000);\n    }\n  };\n  const handleMessageSelect = messageId => {\n    if (selectedMessages.includes(messageId)) {\n      setSelectedMessages(prev => prev.filter(id => id !== messageId));\n    } else {\n      setSelectedMessages(prev => [...prev, messageId]);\n    }\n  };\n  const deleteSelectedMessages = () => {\n    if (selectedSeller) {\n      setChatHistory(prev => ({\n        ...prev,\n        [selectedSeller.id]: prev[selectedSeller.id].filter(msg => !selectedMessages.includes(msg.id))\n      }));\n      setSelectedMessages([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sellers-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search sellers...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sellers-list\",\n        children: sellers.filter(seller => seller.name.toLowerCase().includes(searchTerm.toLowerCase())).map(seller => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `seller-item ${(selectedSeller === null || selectedSeller === void 0 ? void 0 : selectedSeller.id) === seller.id ? 'selected' : ''}`,\n          onClick: () => setSelectedSeller(seller),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: seller.avatar,\n            alt: seller.name,\n            className: \"seller-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"seller-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"seller-name\",\n              children: seller.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"seller-status\",\n              children: seller.lastSeen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)]\n        }, seller.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-area\",\n      children: selectedSeller ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-seller-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: selectedSeller.avatar,\n              alt: selectedSeller.name,\n              className: \"seller-avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"seller-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"seller-name\",\n                children: selectedSeller.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"seller-status\",\n                children: selectedSeller.lastSeen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button\",\n              children: \"\\u22EE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          ref: chatBoxRef,\n          children: (_chatHistory$selected = chatHistory[selectedSeller.id]) === null || _chatHistory$selected === void 0 ? void 0 : _chatHistory$selected.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-wrapper ${msg.sender === 'user' ? 'sent' : 'received'}`,\n            onMouseDown: () => handleMessageSelect(msg.id),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${selectedMessages.includes(msg.id) ? 'selected' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"message-text\",\n                children: msg.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-time\",\n                  children: msg.timestamp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 23\n                }, this), msg.sender === 'user' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-status\",\n                  children: msg.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this)\n          }, msg.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-area\",\n          children: [selectedMessages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selection-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [selectedMessages.length, \" selected\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: deleteSelectedMessages,\n              className: \"delete-button\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"attachment-button\",\n              children: \"\\uD83D\\uDCCE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: message,\n              onChange: e => setMessage(e.target.value),\n              onKeyPress: e => e.key === 'Enter' && sendMessage(),\n              placeholder: \"Type your message...\",\n              className: \"message-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: sendMessage,\n              className: \"send-button\",\n              children: \"\\u27A4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: \"Select a seller to start chatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"mJrX5anyww36sb+qZZBRj/B4s1k=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Chat","message","setMessage","sellers","setSellers","id","name","lastSeen","avatar","selectedSeller","setSelectedSeller","chatHistory","setChatHistory","selectedMessages","setSelectedMessages","searchTerm","setSearchTerm","chatBoxRef","initialChats","forEach","seller","text","sender","timestamp","Date","toLocaleTimeString","status","sendMessage","trim","newMessage","now","prev","setTimeout","response","handleMessageSelect","messageId","includes","filter","deleteSelectedMessages","msg","e","target","value","toLowerCase","map","length","key"],"sources":["/home/yadu/Music/Gifty/src/components/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"./CSS/chat.css\";\n\nfunction Chat() {\n  const [message, setMessage] = useState(\"\");\n  const [sellers, setSellers] = useState([\n    { id: 1, name: \"John Smith\", lastSeen: \"online\", avatar: \"/placeholder.jpg\" },\n    { id: 2, name: \"Sarah Johnson\", lastSeen: \"2 min ago\", avatar: \"/placeholder.jpg\" },\n    { id: 3, name: \"Mike Williams\", lastSeen: \"1 hour ago\", avatar: \"/placeholder.jpg\" },\n  ]);\n  const [selectedSeller, setSelectedSeller] = useState(null);\n  const [chatHistory, setChatHistory] = useState({});\n  const [selectedMessages, setSelectedMessages] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const chatBoxRef = useRef(null);\n\n  // Initialize chat history for each seller\n  useEffect(() => {\n    const initialChats = {};\n    sellers.forEach(seller => {\n      initialChats[seller.id] = [\n        {\n          id: 1,\n          text: \"Hello there!\",\n          sender: seller.id,\n          timestamp: new Date().toLocaleTimeString(),\n          status: \"read\"\n        }\n      ];\n    });\n    setChatHistory(initialChats);\n  }, []);\n\n  const sendMessage = () => {\n    if (message.trim() && selectedSeller) {\n      const newMessage = {\n        id: Date.now(),\n        text: message,\n        sender: \"user\",\n        timestamp: new Date().toLocaleTimeString(),\n        status: \"sent\"\n      };\n\n      setChatHistory(prev => ({\n        ...prev,\n        [selectedSeller.id]: [...(prev[selectedSeller.id] || []), newMessage]\n      }));\n      setMessage(\"\");\n\n      // Simulate seller response\n      setTimeout(() => {\n        const response = {\n          id: Date.now() + 1,\n          text: \"Thanks for your message! I'll get back to you soon.\",\n          sender: selectedSeller.id,\n          timestamp: new Date().toLocaleTimeString(),\n          status: \"received\"\n        };\n        \n        setChatHistory(prev => ({\n          ...prev,\n          [selectedSeller.id]: [...(prev[selectedSeller.id] || []), response]\n        }));\n      }, 1000);\n    }\n  };\n\n  const handleMessageSelect = (messageId) => {\n    if (selectedMessages.includes(messageId)) {\n      setSelectedMessages(prev => prev.filter(id => id !== messageId));\n    } else {\n      setSelectedMessages(prev => [...prev, messageId]);\n    }\n  };\n\n  const deleteSelectedMessages = () => {\n    if (selectedSeller) {\n      setChatHistory(prev => ({\n        ...prev,\n        [selectedSeller.id]: prev[selectedSeller.id].filter(\n          msg => !selectedMessages.includes(msg.id)\n        )\n      }));\n      setSelectedMessages([]);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      {/* Sellers Sidebar */}\n      <div className=\"sellers-sidebar\">\n        <div className=\"search-container\">\n          <input\n            type=\"text\"\n            placeholder=\"Search sellers...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"search-input\"\n          />\n        </div>\n        <div className=\"sellers-list\">\n          {sellers\n            .filter(seller => \n              seller.name.toLowerCase().includes(searchTerm.toLowerCase())\n            )\n            .map(seller => (\n              <div\n                key={seller.id}\n                className={`seller-item ${selectedSeller?.id === seller.id ? 'selected' : ''}`}\n                onClick={() => setSelectedSeller(seller)}\n              >\n                <img src={seller.avatar} alt={seller.name} className=\"seller-avatar\" />\n                <div className=\"seller-info\">\n                  <div className=\"seller-name\">{seller.name}</div>\n                  <div className=\"seller-status\">{seller.lastSeen}</div>\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n\n      {/* Chat Area */}\n      <div className=\"chat-area\">\n        {selectedSeller ? (\n          <>\n            {/* Chat Header */}\n            <div className=\"chat-header\">\n              <div className=\"selected-seller-info\">\n                <img src={selectedSeller.avatar} alt={selectedSeller.name} className=\"seller-avatar\" />\n                <div className=\"seller-details\">\n                  <div className=\"seller-name\">{selectedSeller.name}</div>\n                  <div className=\"seller-status\">{selectedSeller.lastSeen}</div>\n                </div>\n              </div>\n              <div className=\"chat-actions\">\n                <button className=\"action-button\">⋮</button>\n              </div>\n            </div>\n\n            {/* Messages Area */}\n            <div className=\"messages-container\" ref={chatBoxRef}>\n              {chatHistory[selectedSeller.id]?.map(msg => (\n                <div\n                  key={msg.id}\n                  className={`message-wrapper ${msg.sender === 'user' ? 'sent' : 'received'}`}\n                  onMouseDown={() => handleMessageSelect(msg.id)}\n                >\n                  <div className={`message ${selectedMessages.includes(msg.id) ? 'selected' : ''}`}>\n                    <p className=\"message-text\">{msg.text}</p>\n                    <div className=\"message-info\">\n                      <span className=\"message-time\">{msg.timestamp}</span>\n                      {msg.sender === 'user' && (\n                        <span className=\"message-status\">{msg.status}</span>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Input Area */}\n            <div className=\"input-area\">\n              {selectedMessages.length > 0 && (\n                <div className=\"selection-actions\">\n                  <span>{selectedMessages.length} selected</span>\n                  <button onClick={deleteSelectedMessages} className=\"delete-button\">\n                    Delete\n                  </button>\n                </div>\n              )}\n              <div className=\"message-input-container\">\n                <button className=\"attachment-button\">📎</button>\n                <input\n                  type=\"text\"\n                  value={message}\n                  onChange={(e) => setMessage(e.target.value)}\n                  onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\n                  placeholder=\"Type your message...\"\n                  className=\"message-input\"\n                />\n                <button onClick={sendMessage} className=\"send-button\">\n                  ➤\n                </button>\n              </div>\n            </div>\n          </>\n        ) : (\n          <div className=\"no-chat-selected\">\n            Select a seller to start chatting\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}