{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n  return ar;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.syncMemoizer = void 0;\nvar lru_cache_1 = __importDefault(require(\"lru-cache\"));\nvar events_1 = require(\"events\");\nvar lodash_clonedeep_1 = __importDefault(require(\"lodash.clonedeep\"));\nvar freeze_1 = require(\"./freeze\");\nfunction syncMemoizer(options) {\n  var cache = new lru_cache_1.default(options);\n  var load = options.load;\n  var hash = options.hash;\n  var bypass = options.bypass;\n  var itemMaxAge = options.itemMaxAge;\n  var freeze = options.freeze;\n  var clone = options.clone;\n  var emitter = new events_1.EventEmitter();\n  var defaultResult = Object.assign({\n    del: del,\n    reset: function () {\n      return cache.reset();\n    },\n    keys: cache.keys.bind(cache),\n    on: emitter.on.bind(emitter),\n    once: emitter.once.bind(emitter)\n  }, options);\n  if (options.disable) {\n    return Object.assign(load, defaultResult);\n  }\n  function del() {\n    var key = hash.apply(void 0, __spread(arguments));\n    cache.del(key);\n  }\n  function emit(event) {\n    var parameters = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      parameters[_i - 1] = arguments[_i];\n    }\n    emitter.emit.apply(emitter, __spread([event], parameters));\n  }\n  function isPromise(result) {\n    // detect native, bluebird, A+ promises\n    return result && result.then && typeof result.then === 'function';\n  }\n  function processResult(result) {\n    var res = result;\n    if (clone) {\n      if (isPromise(res)) {\n        res = res.then(lodash_clonedeep_1.default);\n      } else {\n        res = lodash_clonedeep_1.default(res);\n      }\n    }\n    if (freeze) {\n      if (isPromise(res)) {\n        res = res.then(freeze_1.deepFreeze);\n      } else {\n        freeze_1.deepFreeze(res);\n      }\n    }\n    return res;\n  }\n  var result = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (bypass && bypass.apply(void 0, __spread(args))) {\n      emit.apply(void 0, __spread(['miss'], args));\n      return load.apply(void 0, __spread(args));\n    }\n    var key = hash.apply(void 0, __spread(args));\n    var fromCache = cache.get(key);\n    if (fromCache) {\n      emit.apply(void 0, __spread(['hit'], args));\n      return processResult(fromCache);\n    }\n    emit.apply(void 0, __spread(['miss'], args));\n    var result = load.apply(void 0, __spread(args));\n    if (itemMaxAge) {\n      // @ts-ignore\n      cache.set(key, result, itemMaxAge.apply(void 0, __spread(args.concat([result]))));\n    } else {\n      cache.set(key, result);\n    }\n    return processResult(result);\n  };\n  return Object.assign(result, defaultResult);\n}\nexports.syncMemoizer = syncMemoizer;","map":{"version":3,"mappings":"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","names":["syncMemoizer","options","cache","lru_cache_1","load","hash","bypass","itemMaxAge","freeze","clone","emitter","events_1","defaultResult","Object","assign","del","reset","keys","bind","on","once","disable","key","arguments","emit","event","_i","parameters","isPromise","result","then","processResult","res","lodash_clonedeep_1","freeze_1","args","fromCache","get","set","concat","exports"],"sources":["../src/sync.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}