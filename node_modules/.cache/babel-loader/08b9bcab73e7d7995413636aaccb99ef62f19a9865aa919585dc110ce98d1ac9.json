{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SigningError = exports.URLSigner = exports.PATH_STYLED_HOST = exports.SignerExceptionMessages = void 0;\nconst crypto = __importStar(require(\"crypto\"));\nconst url = __importStar(require(\"url\"));\nconst storage_js_1 = require(\"./storage.js\");\nconst util_js_1 = require(\"./util.js\");\nvar SignerExceptionMessages;\n(function (SignerExceptionMessages) {\n  SignerExceptionMessages[\"ACCESSIBLE_DATE_INVALID\"] = \"The accessible at date provided was invalid.\";\n  SignerExceptionMessages[\"EXPIRATION_BEFORE_ACCESSIBLE_DATE\"] = \"An expiration date cannot be before accessible date.\";\n  SignerExceptionMessages[\"X_GOOG_CONTENT_SHA256\"] = \"The header X-Goog-Content-SHA256 must be a hexadecimal string.\";\n})(SignerExceptionMessages || (exports.SignerExceptionMessages = SignerExceptionMessages = {}));\n/*\n * Default signing version for getSignedUrl is 'v2'.\n */\nconst DEFAULT_SIGNING_VERSION = 'v2';\nconst SEVEN_DAYS = 7 * 24 * 60 * 60;\n/**\n * @const {string}\n * @deprecated - unused\n */\nexports.PATH_STYLED_HOST = 'https://storage.googleapis.com';\nclass URLSigner {\n  constructor(auth, bucket, file) {\n    let storage = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new storage_js_1.Storage();\n    this.auth = auth;\n    this.bucket = bucket;\n    this.file = file;\n    this.storage = storage;\n  }\n  getSignedUrl(cfg) {\n    const expiresInSeconds = this.parseExpires(cfg.expires);\n    const method = cfg.method;\n    const accessibleAtInSeconds = this.parseAccessibleAt(cfg.accessibleAt);\n    if (expiresInSeconds < accessibleAtInSeconds) {\n      throw new Error(SignerExceptionMessages.EXPIRATION_BEFORE_ACCESSIBLE_DATE);\n    }\n    let customHost;\n    // Default style is `path`.\n    const isVirtualHostedStyle = cfg.virtualHostedStyle || false;\n    if (cfg.cname) {\n      customHost = cfg.cname;\n    } else if (isVirtualHostedStyle) {\n      customHost = `https://${this.bucket.name}.storage.${this.storage.universeDomain}`;\n    }\n    const secondsToMilliseconds = 1000;\n    const config = Object.assign({}, cfg, {\n      method,\n      expiration: expiresInSeconds,\n      accessibleAt: new Date(secondsToMilliseconds * accessibleAtInSeconds),\n      bucket: this.bucket.name,\n      file: this.file ? (0, util_js_1.encodeURI)(this.file.name, false) : undefined\n    });\n    if (customHost) {\n      config.cname = customHost;\n    }\n    const version = cfg.version || DEFAULT_SIGNING_VERSION;\n    let promise;\n    if (version === 'v2') {\n      promise = this.getSignedUrlV2(config);\n    } else if (version === 'v4') {\n      promise = this.getSignedUrlV4(config);\n    } else {\n      throw new Error(`Invalid signed URL version: ${version}. Supported versions are 'v2' and 'v4'.`);\n    }\n    return promise.then(query => {\n      var _a;\n      query = Object.assign(query, cfg.queryParams);\n      const signedUrl = new url.URL(((_a = cfg.host) === null || _a === void 0 ? void 0 : _a.toString()) || config.cname || this.storage.apiEndpoint);\n      signedUrl.pathname = this.getResourcePath(!!config.cname, this.bucket.name, config.file);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      signedUrl.search = (0, util_js_1.qsStringify)(query);\n      return signedUrl.href;\n    });\n  }\n  getSignedUrlV2(config) {\n    const canonicalHeadersString = this.getCanonicalHeaders(config.extensionHeaders || {});\n    const resourcePath = this.getResourcePath(false, config.bucket, config.file);\n    const blobToSign = [config.method, config.contentMd5 || '', config.contentType || '', config.expiration, canonicalHeadersString + resourcePath].join('\\n');\n    const sign = async () => {\n      var _a;\n      const auth = this.auth;\n      try {\n        const signature = await auth.sign(blobToSign, (_a = config.signingEndpoint) === null || _a === void 0 ? void 0 : _a.toString());\n        const credentials = await auth.getCredentials();\n        return {\n          GoogleAccessId: credentials.client_email,\n          Expires: config.expiration,\n          Signature: signature\n        };\n      } catch (err) {\n        const error = err;\n        const signingErr = new SigningError(error.message);\n        signingErr.stack = error.stack;\n        throw signingErr;\n      }\n    };\n    return sign();\n  }\n  getSignedUrlV4(config) {\n    var _a;\n    config.accessibleAt = config.accessibleAt ? config.accessibleAt : new Date();\n    const millisecondsToSeconds = 1.0 / 1000.0;\n    const expiresPeriodInSeconds = config.expiration - config.accessibleAt.valueOf() * millisecondsToSeconds;\n    // v4 limit expiration to be 7 days maximum\n    if (expiresPeriodInSeconds > SEVEN_DAYS) {\n      throw new Error(`Max allowed expiration is seven days (${SEVEN_DAYS} seconds).`);\n    }\n    const extensionHeaders = Object.assign({}, config.extensionHeaders);\n    const fqdn = new url.URL(((_a = config.host) === null || _a === void 0 ? void 0 : _a.toString()) || config.cname || this.storage.apiEndpoint);\n    extensionHeaders.host = fqdn.hostname;\n    if (config.contentMd5) {\n      extensionHeaders['content-md5'] = config.contentMd5;\n    }\n    if (config.contentType) {\n      extensionHeaders['content-type'] = config.contentType;\n    }\n    let contentSha256;\n    const sha256Header = extensionHeaders['x-goog-content-sha256'];\n    if (sha256Header) {\n      if (typeof sha256Header !== 'string' || !/[A-Fa-f0-9]{40}/.test(sha256Header)) {\n        throw new Error(SignerExceptionMessages.X_GOOG_CONTENT_SHA256);\n      }\n      contentSha256 = sha256Header;\n    }\n    const signedHeaders = Object.keys(extensionHeaders).map(header => header.toLowerCase()).sort().join(';');\n    const extensionHeadersString = this.getCanonicalHeaders(extensionHeaders);\n    const datestamp = (0, util_js_1.formatAsUTCISO)(config.accessibleAt);\n    const credentialScope = `${datestamp}/auto/storage/goog4_request`;\n    const sign = async () => {\n      var _a;\n      const credentials = await this.auth.getCredentials();\n      const credential = `${credentials.client_email}/${credentialScope}`;\n      const dateISO = (0, util_js_1.formatAsUTCISO)(config.accessibleAt ? config.accessibleAt : new Date(), true);\n      const queryParams = {\n        'X-Goog-Algorithm': 'GOOG4-RSA-SHA256',\n        'X-Goog-Credential': credential,\n        'X-Goog-Date': dateISO,\n        'X-Goog-Expires': expiresPeriodInSeconds.toString(10),\n        'X-Goog-SignedHeaders': signedHeaders,\n        ...(config.queryParams || {})\n      };\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const canonicalQueryParams = this.getCanonicalQueryParams(queryParams);\n      const canonicalRequest = this.getCanonicalRequest(config.method, this.getResourcePath(!!config.cname, config.bucket, config.file), canonicalQueryParams, extensionHeadersString, signedHeaders, contentSha256);\n      const hash = crypto.createHash('sha256').update(canonicalRequest).digest('hex');\n      const blobToSign = ['GOOG4-RSA-SHA256', dateISO, credentialScope, hash].join('\\n');\n      try {\n        const signature = await this.auth.sign(blobToSign, (_a = config.signingEndpoint) === null || _a === void 0 ? void 0 : _a.toString());\n        const signatureHex = Buffer.from(signature, 'base64').toString('hex');\n        const signedQuery = Object.assign({}, queryParams, {\n          'X-Goog-Signature': signatureHex\n        });\n        return signedQuery;\n      } catch (err) {\n        const error = err;\n        const signingErr = new SigningError(error.message);\n        signingErr.stack = error.stack;\n        throw signingErr;\n      }\n    };\n    return sign();\n  }\n  /**\n   * Create canonical headers for signing v4 url.\n   *\n   * The canonical headers for v4-signing a request demands header names are\n   * first lowercased, followed by sorting the header names.\n   * Then, construct the canonical headers part of the request:\n   *  <lowercasedHeaderName> + \":\" + Trim(<value>) + \"\\n\"\n   *  ..\n   *  <lowercasedHeaderName> + \":\" + Trim(<value>) + \"\\n\"\n   *\n   * @param headers\n   * @private\n   */\n  getCanonicalHeaders(headers) {\n    // Sort headers by their lowercased names\n    const sortedHeaders = (0, util_js_1.objectEntries)(headers)\n    // Convert header names to lowercase\n    .map(_ref => {\n      let [headerName, value] = _ref;\n      return [headerName.toLowerCase(), value];\n    }).sort((a, b) => a[0].localeCompare(b[0]));\n    return sortedHeaders.filter(_ref2 => {\n      let [, value] = _ref2;\n      return value !== undefined;\n    }).map(_ref3 => {\n      let [headerName, value] = _ref3;\n      // - Convert Array (multi-valued header) into string, delimited by\n      //      ',' (no space).\n      // - Trim leading and trailing spaces.\n      // - Convert sequential (2+) spaces into a single space\n      const canonicalValue = `${value}`.trim().replace(/\\s{2,}/g, ' ');\n      return `${headerName}:${canonicalValue}\\n`;\n    }).join('');\n  }\n  getCanonicalRequest(method, path, query, headers, signedHeaders, contentSha256) {\n    return [method, path, query, headers, signedHeaders, contentSha256 || 'UNSIGNED-PAYLOAD'].join('\\n');\n  }\n  getCanonicalQueryParams(query) {\n    return (0, util_js_1.objectEntries)(query).map(_ref4 => {\n      let [key, value] = _ref4;\n      return [(0, util_js_1.encodeURI)(key, true), (0, util_js_1.encodeURI)(value, true)];\n    }).sort((a, b) => a[0] < b[0] ? -1 : 1).map(_ref5 => {\n      let [key, value] = _ref5;\n      return `${key}=${value}`;\n    }).join('&');\n  }\n  getResourcePath(cname, bucket, file) {\n    if (cname) {\n      return '/' + (file || '');\n    } else if (file) {\n      return `/${bucket}/${file}`;\n    } else {\n      return `/${bucket}`;\n    }\n  }\n  parseExpires(expires) {\n    let current = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Date();\n    const expiresInMSeconds = new Date(expires).valueOf();\n    if (isNaN(expiresInMSeconds)) {\n      throw new Error(storage_js_1.ExceptionMessages.EXPIRATION_DATE_INVALID);\n    }\n    if (expiresInMSeconds < current.valueOf()) {\n      throw new Error(storage_js_1.ExceptionMessages.EXPIRATION_DATE_PAST);\n    }\n    return Math.floor(expiresInMSeconds / 1000); // The API expects seconds.\n  }\n\n  parseAccessibleAt(accessibleAt) {\n    const accessibleAtInMSeconds = new Date(accessibleAt || new Date()).valueOf();\n    if (isNaN(accessibleAtInMSeconds)) {\n      throw new Error(SignerExceptionMessages.ACCESSIBLE_DATE_INVALID);\n    }\n    return Math.floor(accessibleAtInMSeconds / 1000); // The API expects seconds.\n  }\n}\n\nexports.URLSigner = URLSigner;\n/**\n * Custom error type for errors related to getting signed errors and policies.\n *\n * @private\n */\nclass SigningError extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = 'SigningError';\n  }\n}\nexports.SigningError = SigningError;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","SigningError","URLSigner","PATH_STYLED_HOST","SignerExceptionMessages","crypto","require","url","storage_js_1","util_js_1","DEFAULT_SIGNING_VERSION","SEVEN_DAYS","constructor","auth","bucket","file","storage","Storage","getSignedUrl","cfg","expiresInSeconds","parseExpires","expires","method","accessibleAtInSeconds","parseAccessibleAt","accessibleAt","Error","EXPIRATION_BEFORE_ACCESSIBLE_DATE","customHost","isVirtualHostedStyle","virtualHostedStyle","cname","name","universeDomain","secondsToMilliseconds","config","assign","expiration","Date","encodeURI","version","promise","getSignedUrlV2","getSignedUrlV4","then","query","_a","queryParams","signedUrl","URL","host","toString","apiEndpoint","pathname","getResourcePath","search","qsStringify","href","canonicalHeadersString","getCanonicalHeaders","extensionHeaders","resourcePath","blobToSign","contentMd5","contentType","join","sign","signature","signingEndpoint","credentials","getCredentials","GoogleAccessId","client_email","Expires","Signature","err","error","signingErr","message","stack","millisecondsToSeconds","expiresPeriodInSeconds","valueOf","fqdn","hostname","contentSha256","sha256Header","test","X_GOOG_CONTENT_SHA256","signedHeaders","keys","map","header","toLowerCase","sort","extensionHeadersString","datestamp","formatAsUTCISO","credentialScope","credential","dateISO","canonicalQueryParams","getCanonicalQueryParams","canonicalRequest","getCanonicalRequest","hash","createHash","update","digest","signatureHex","Buffer","from","signedQuery","headers","sortedHeaders","objectEntries","headerName","a","b","localeCompare","filter","canonicalValue","trim","replace","path","key","current","expiresInMSeconds","isNaN","ExceptionMessages","EXPIRATION_DATE_INVALID","EXPIRATION_DATE_PAST","Math","floor","accessibleAtInMSeconds","ACCESSIBLE_DATE_INVALID","arguments"],"sources":["/home/yadu/Music/Gifty/node_modules/@google-cloud/storage/build/cjs/src/signer.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SigningError = exports.URLSigner = exports.PATH_STYLED_HOST = exports.SignerExceptionMessages = void 0;\nconst crypto = __importStar(require(\"crypto\"));\nconst url = __importStar(require(\"url\"));\nconst storage_js_1 = require(\"./storage.js\");\nconst util_js_1 = require(\"./util.js\");\nvar SignerExceptionMessages;\n(function (SignerExceptionMessages) {\n    SignerExceptionMessages[\"ACCESSIBLE_DATE_INVALID\"] = \"The accessible at date provided was invalid.\";\n    SignerExceptionMessages[\"EXPIRATION_BEFORE_ACCESSIBLE_DATE\"] = \"An expiration date cannot be before accessible date.\";\n    SignerExceptionMessages[\"X_GOOG_CONTENT_SHA256\"] = \"The header X-Goog-Content-SHA256 must be a hexadecimal string.\";\n})(SignerExceptionMessages || (exports.SignerExceptionMessages = SignerExceptionMessages = {}));\n/*\n * Default signing version for getSignedUrl is 'v2'.\n */\nconst DEFAULT_SIGNING_VERSION = 'v2';\nconst SEVEN_DAYS = 7 * 24 * 60 * 60;\n/**\n * @const {string}\n * @deprecated - unused\n */\nexports.PATH_STYLED_HOST = 'https://storage.googleapis.com';\nclass URLSigner {\n    constructor(auth, bucket, file, \n    /**\n     * A {@link Storage} object.\n     *\n     * @privateRemarks\n     *\n     * Technically this is a required field, however it would be a breaking change to\n     * move it before optional properties. In the next major we should refactor the\n     * constructor of this class to only accept a config object.\n     */\n    storage = new storage_js_1.Storage()) {\n        this.auth = auth;\n        this.bucket = bucket;\n        this.file = file;\n        this.storage = storage;\n    }\n    getSignedUrl(cfg) {\n        const expiresInSeconds = this.parseExpires(cfg.expires);\n        const method = cfg.method;\n        const accessibleAtInSeconds = this.parseAccessibleAt(cfg.accessibleAt);\n        if (expiresInSeconds < accessibleAtInSeconds) {\n            throw new Error(SignerExceptionMessages.EXPIRATION_BEFORE_ACCESSIBLE_DATE);\n        }\n        let customHost;\n        // Default style is `path`.\n        const isVirtualHostedStyle = cfg.virtualHostedStyle || false;\n        if (cfg.cname) {\n            customHost = cfg.cname;\n        }\n        else if (isVirtualHostedStyle) {\n            customHost = `https://${this.bucket.name}.storage.${this.storage.universeDomain}`;\n        }\n        const secondsToMilliseconds = 1000;\n        const config = Object.assign({}, cfg, {\n            method,\n            expiration: expiresInSeconds,\n            accessibleAt: new Date(secondsToMilliseconds * accessibleAtInSeconds),\n            bucket: this.bucket.name,\n            file: this.file ? (0, util_js_1.encodeURI)(this.file.name, false) : undefined,\n        });\n        if (customHost) {\n            config.cname = customHost;\n        }\n        const version = cfg.version || DEFAULT_SIGNING_VERSION;\n        let promise;\n        if (version === 'v2') {\n            promise = this.getSignedUrlV2(config);\n        }\n        else if (version === 'v4') {\n            promise = this.getSignedUrlV4(config);\n        }\n        else {\n            throw new Error(`Invalid signed URL version: ${version}. Supported versions are 'v2' and 'v4'.`);\n        }\n        return promise.then(query => {\n            var _a;\n            query = Object.assign(query, cfg.queryParams);\n            const signedUrl = new url.URL(((_a = cfg.host) === null || _a === void 0 ? void 0 : _a.toString()) || config.cname || this.storage.apiEndpoint);\n            signedUrl.pathname = this.getResourcePath(!!config.cname, this.bucket.name, config.file);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            signedUrl.search = (0, util_js_1.qsStringify)(query);\n            return signedUrl.href;\n        });\n    }\n    getSignedUrlV2(config) {\n        const canonicalHeadersString = this.getCanonicalHeaders(config.extensionHeaders || {});\n        const resourcePath = this.getResourcePath(false, config.bucket, config.file);\n        const blobToSign = [\n            config.method,\n            config.contentMd5 || '',\n            config.contentType || '',\n            config.expiration,\n            canonicalHeadersString + resourcePath,\n        ].join('\\n');\n        const sign = async () => {\n            var _a;\n            const auth = this.auth;\n            try {\n                const signature = await auth.sign(blobToSign, (_a = config.signingEndpoint) === null || _a === void 0 ? void 0 : _a.toString());\n                const credentials = await auth.getCredentials();\n                return {\n                    GoogleAccessId: credentials.client_email,\n                    Expires: config.expiration,\n                    Signature: signature,\n                };\n            }\n            catch (err) {\n                const error = err;\n                const signingErr = new SigningError(error.message);\n                signingErr.stack = error.stack;\n                throw signingErr;\n            }\n        };\n        return sign();\n    }\n    getSignedUrlV4(config) {\n        var _a;\n        config.accessibleAt = config.accessibleAt\n            ? config.accessibleAt\n            : new Date();\n        const millisecondsToSeconds = 1.0 / 1000.0;\n        const expiresPeriodInSeconds = config.expiration - config.accessibleAt.valueOf() * millisecondsToSeconds;\n        // v4 limit expiration to be 7 days maximum\n        if (expiresPeriodInSeconds > SEVEN_DAYS) {\n            throw new Error(`Max allowed expiration is seven days (${SEVEN_DAYS} seconds).`);\n        }\n        const extensionHeaders = Object.assign({}, config.extensionHeaders);\n        const fqdn = new url.URL(((_a = config.host) === null || _a === void 0 ? void 0 : _a.toString()) || config.cname || this.storage.apiEndpoint);\n        extensionHeaders.host = fqdn.hostname;\n        if (config.contentMd5) {\n            extensionHeaders['content-md5'] = config.contentMd5;\n        }\n        if (config.contentType) {\n            extensionHeaders['content-type'] = config.contentType;\n        }\n        let contentSha256;\n        const sha256Header = extensionHeaders['x-goog-content-sha256'];\n        if (sha256Header) {\n            if (typeof sha256Header !== 'string' ||\n                !/[A-Fa-f0-9]{40}/.test(sha256Header)) {\n                throw new Error(SignerExceptionMessages.X_GOOG_CONTENT_SHA256);\n            }\n            contentSha256 = sha256Header;\n        }\n        const signedHeaders = Object.keys(extensionHeaders)\n            .map(header => header.toLowerCase())\n            .sort()\n            .join(';');\n        const extensionHeadersString = this.getCanonicalHeaders(extensionHeaders);\n        const datestamp = (0, util_js_1.formatAsUTCISO)(config.accessibleAt);\n        const credentialScope = `${datestamp}/auto/storage/goog4_request`;\n        const sign = async () => {\n            var _a;\n            const credentials = await this.auth.getCredentials();\n            const credential = `${credentials.client_email}/${credentialScope}`;\n            const dateISO = (0, util_js_1.formatAsUTCISO)(config.accessibleAt ? config.accessibleAt : new Date(), true);\n            const queryParams = {\n                'X-Goog-Algorithm': 'GOOG4-RSA-SHA256',\n                'X-Goog-Credential': credential,\n                'X-Goog-Date': dateISO,\n                'X-Goog-Expires': expiresPeriodInSeconds.toString(10),\n                'X-Goog-SignedHeaders': signedHeaders,\n                ...(config.queryParams || {}),\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const canonicalQueryParams = this.getCanonicalQueryParams(queryParams);\n            const canonicalRequest = this.getCanonicalRequest(config.method, this.getResourcePath(!!config.cname, config.bucket, config.file), canonicalQueryParams, extensionHeadersString, signedHeaders, contentSha256);\n            const hash = crypto\n                .createHash('sha256')\n                .update(canonicalRequest)\n                .digest('hex');\n            const blobToSign = [\n                'GOOG4-RSA-SHA256',\n                dateISO,\n                credentialScope,\n                hash,\n            ].join('\\n');\n            try {\n                const signature = await this.auth.sign(blobToSign, (_a = config.signingEndpoint) === null || _a === void 0 ? void 0 : _a.toString());\n                const signatureHex = Buffer.from(signature, 'base64').toString('hex');\n                const signedQuery = Object.assign({}, queryParams, {\n                    'X-Goog-Signature': signatureHex,\n                });\n                return signedQuery;\n            }\n            catch (err) {\n                const error = err;\n                const signingErr = new SigningError(error.message);\n                signingErr.stack = error.stack;\n                throw signingErr;\n            }\n        };\n        return sign();\n    }\n    /**\n     * Create canonical headers for signing v4 url.\n     *\n     * The canonical headers for v4-signing a request demands header names are\n     * first lowercased, followed by sorting the header names.\n     * Then, construct the canonical headers part of the request:\n     *  <lowercasedHeaderName> + \":\" + Trim(<value>) + \"\\n\"\n     *  ..\n     *  <lowercasedHeaderName> + \":\" + Trim(<value>) + \"\\n\"\n     *\n     * @param headers\n     * @private\n     */\n    getCanonicalHeaders(headers) {\n        // Sort headers by their lowercased names\n        const sortedHeaders = (0, util_js_1.objectEntries)(headers)\n            // Convert header names to lowercase\n            .map(([headerName, value]) => [\n            headerName.toLowerCase(),\n            value,\n        ])\n            .sort((a, b) => a[0].localeCompare(b[0]));\n        return sortedHeaders\n            .filter(([, value]) => value !== undefined)\n            .map(([headerName, value]) => {\n            // - Convert Array (multi-valued header) into string, delimited by\n            //      ',' (no space).\n            // - Trim leading and trailing spaces.\n            // - Convert sequential (2+) spaces into a single space\n            const canonicalValue = `${value}`.trim().replace(/\\s{2,}/g, ' ');\n            return `${headerName}:${canonicalValue}\\n`;\n        })\n            .join('');\n    }\n    getCanonicalRequest(method, path, query, headers, signedHeaders, contentSha256) {\n        return [\n            method,\n            path,\n            query,\n            headers,\n            signedHeaders,\n            contentSha256 || 'UNSIGNED-PAYLOAD',\n        ].join('\\n');\n    }\n    getCanonicalQueryParams(query) {\n        return (0, util_js_1.objectEntries)(query)\n            .map(([key, value]) => [(0, util_js_1.encodeURI)(key, true), (0, util_js_1.encodeURI)(value, true)])\n            .sort((a, b) => (a[0] < b[0] ? -1 : 1))\n            .map(([key, value]) => `${key}=${value}`)\n            .join('&');\n    }\n    getResourcePath(cname, bucket, file) {\n        if (cname) {\n            return '/' + (file || '');\n        }\n        else if (file) {\n            return `/${bucket}/${file}`;\n        }\n        else {\n            return `/${bucket}`;\n        }\n    }\n    parseExpires(expires, current = new Date()) {\n        const expiresInMSeconds = new Date(expires).valueOf();\n        if (isNaN(expiresInMSeconds)) {\n            throw new Error(storage_js_1.ExceptionMessages.EXPIRATION_DATE_INVALID);\n        }\n        if (expiresInMSeconds < current.valueOf()) {\n            throw new Error(storage_js_1.ExceptionMessages.EXPIRATION_DATE_PAST);\n        }\n        return Math.floor(expiresInMSeconds / 1000); // The API expects seconds.\n    }\n    parseAccessibleAt(accessibleAt) {\n        const accessibleAtInMSeconds = new Date(accessibleAt || new Date()).valueOf();\n        if (isNaN(accessibleAtInMSeconds)) {\n            throw new Error(SignerExceptionMessages.ACCESSIBLE_DATE_INVALID);\n        }\n        return Math.floor(accessibleAtInMSeconds / 1000); // The API expects seconds.\n    }\n}\nexports.URLSigner = URLSigner;\n/**\n * Custom error type for errors related to getting signed errors and policies.\n *\n * @private\n */\nclass SigningError extends Error {\n    constructor() {\n        super(...arguments);\n        this.name = 'SigningError';\n    }\n}\nexports.SigningError = SigningError;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}