{"ast":null,"code":"/*! firebase-admin v12.7.0 */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProjectConfig = void 0;\n/*!\n * Copyright 2022 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst validator = require(\"../utils/validator\");\nconst error_1 = require(\"../utils/error\");\nconst auth_config_1 = require(\"./auth-config\");\nconst deep_copy_1 = require(\"../utils/deep-copy\");\n/**\n* Represents a project configuration.\n*/\nclass ProjectConfig {\n  /**\n   * The multi-factor auth configuration.\n   */\n  get multiFactorConfig() {\n    return this.multiFactorConfig_;\n  }\n  /**\n   * The reCAPTCHA configuration.\n   */\n  get recaptchaConfig() {\n    return this.recaptchaConfig_;\n  }\n  /**\n   * Validates a project config options object. Throws an error on failure.\n   *\n   * @param request - The project config options object to validate.\n   */\n  static validate(request) {\n    if (!validator.isNonNullObject(request)) {\n      throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"UpdateProjectConfigRequest\" must be a valid non-null object.');\n    }\n    const validKeys = {\n      smsRegionConfig: true,\n      multiFactorConfig: true,\n      recaptchaConfig: true,\n      passwordPolicyConfig: true,\n      emailPrivacyConfig: true\n    };\n    // Check for unsupported top level attributes.\n    for (const key in request) {\n      if (!(key in validKeys)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `\"${key}\" is not a valid UpdateProjectConfigRequest parameter.`);\n      }\n    }\n    // Validate SMS Regions Config if provided.\n    if (typeof request.smsRegionConfig !== 'undefined') {\n      auth_config_1.SmsRegionsAuthConfig.validate(request.smsRegionConfig);\n    }\n    // Validate Multi Factor Config if provided\n    if (typeof request.multiFactorConfig !== 'undefined') {\n      auth_config_1.MultiFactorAuthConfig.validate(request.multiFactorConfig);\n    }\n    // Validate reCAPTCHA config attribute.\n    if (typeof request.recaptchaConfig !== 'undefined') {\n      auth_config_1.RecaptchaAuthConfig.validate(request.recaptchaConfig);\n    }\n    // Validate Password policy Config if provided\n    if (typeof request.passwordPolicyConfig !== 'undefined') {\n      auth_config_1.PasswordPolicyAuthConfig.validate(request.passwordPolicyConfig);\n    }\n    // Validate Email Privacy Config if provided.\n    if (typeof request.emailPrivacyConfig !== 'undefined') {\n      auth_config_1.EmailPrivacyAuthConfig.validate(request.emailPrivacyConfig);\n    }\n  }\n  /**\n   * Build the corresponding server request for a UpdateProjectConfigRequest object.\n   * @param configOptions - The properties to convert to a server request.\n   * @returns  The equivalent server request.\n   *\n   * @internal\n   */\n  static buildServerRequest(configOptions) {\n    ProjectConfig.validate(configOptions);\n    const request = {};\n    if (typeof configOptions.smsRegionConfig !== 'undefined') {\n      request.smsRegionConfig = configOptions.smsRegionConfig;\n    }\n    if (typeof configOptions.multiFactorConfig !== 'undefined') {\n      request.mfa = auth_config_1.MultiFactorAuthConfig.buildServerRequest(configOptions.multiFactorConfig);\n    }\n    if (typeof configOptions.recaptchaConfig !== 'undefined') {\n      request.recaptchaConfig = auth_config_1.RecaptchaAuthConfig.buildServerRequest(configOptions.recaptchaConfig);\n    }\n    if (typeof configOptions.passwordPolicyConfig !== 'undefined') {\n      request.passwordPolicyConfig = auth_config_1.PasswordPolicyAuthConfig.buildServerRequest(configOptions.passwordPolicyConfig);\n    }\n    if (typeof configOptions.emailPrivacyConfig !== 'undefined') {\n      request.emailPrivacyConfig = configOptions.emailPrivacyConfig;\n    }\n    return request;\n  }\n  /**\n   * The Project Config object constructor.\n   *\n   * @param response - The server side response used to initialize the Project Config object.\n   * @constructor\n   * @internal\n   */\n  constructor(response) {\n    if (typeof response.smsRegionConfig !== 'undefined') {\n      this.smsRegionConfig = response.smsRegionConfig;\n    }\n    //Backend API returns \"mfa\" in case of project config and \"mfaConfig\" in case of tenant config. \n    //The SDK exposes it as multiFactorConfig always.\n    if (typeof response.mfa !== 'undefined') {\n      this.multiFactorConfig_ = new auth_config_1.MultiFactorAuthConfig(response.mfa);\n    }\n    if (typeof response.recaptchaConfig !== 'undefined') {\n      this.recaptchaConfig_ = new auth_config_1.RecaptchaAuthConfig(response.recaptchaConfig);\n    }\n    if (typeof response.passwordPolicyConfig !== 'undefined') {\n      this.passwordPolicyConfig = new auth_config_1.PasswordPolicyAuthConfig(response.passwordPolicyConfig);\n    }\n    if (typeof response.emailPrivacyConfig !== 'undefined') {\n      this.emailPrivacyConfig = response.emailPrivacyConfig;\n    }\n  }\n  /**\n   * Returns a JSON-serializable representation of this object.\n   *\n   * @returns A JSON-serializable representation of this object.\n   */\n  toJSON() {\n    // JSON serialization\n    const json = {\n      smsRegionConfig: (0, deep_copy_1.deepCopy)(this.smsRegionConfig),\n      multiFactorConfig: (0, deep_copy_1.deepCopy)(this.multiFactorConfig),\n      recaptchaConfig: (0, deep_copy_1.deepCopy)(this.recaptchaConfig),\n      passwordPolicyConfig: (0, deep_copy_1.deepCopy)(this.passwordPolicyConfig),\n      emailPrivacyConfig: (0, deep_copy_1.deepCopy)(this.emailPrivacyConfig)\n    };\n    if (typeof json.smsRegionConfig === 'undefined') {\n      delete json.smsRegionConfig;\n    }\n    if (typeof json.multiFactorConfig === 'undefined') {\n      delete json.multiFactorConfig;\n    }\n    if (typeof json.recaptchaConfig === 'undefined') {\n      delete json.recaptchaConfig;\n    }\n    if (typeof json.passwordPolicyConfig === 'undefined') {\n      delete json.passwordPolicyConfig;\n    }\n    if (typeof json.emailPrivacyConfig === 'undefined') {\n      delete json.emailPrivacyConfig;\n    }\n    return json;\n  }\n}\nexports.ProjectConfig = ProjectConfig;","map":{"version":3,"names":["Object","defineProperty","exports","value","ProjectConfig","validator","require","error_1","auth_config_1","deep_copy_1","multiFactorConfig","multiFactorConfig_","recaptchaConfig","recaptchaConfig_","validate","request","isNonNullObject","FirebaseAuthError","AuthClientErrorCode","INVALID_ARGUMENT","validKeys","smsRegionConfig","passwordPolicyConfig","emailPrivacyConfig","key","SmsRegionsAuthConfig","MultiFactorAuthConfig","RecaptchaAuthConfig","PasswordPolicyAuthConfig","EmailPrivacyAuthConfig","buildServerRequest","configOptions","mfa","constructor","response","toJSON","json","deepCopy"],"sources":["/home/yadu/Music/Gifty/node_modules/firebase-admin/lib/auth/project-config.js"],"sourcesContent":["/*! firebase-admin v12.7.0 */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProjectConfig = void 0;\n/*!\n * Copyright 2022 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst validator = require(\"../utils/validator\");\nconst error_1 = require(\"../utils/error\");\nconst auth_config_1 = require(\"./auth-config\");\nconst deep_copy_1 = require(\"../utils/deep-copy\");\n/**\n* Represents a project configuration.\n*/\nclass ProjectConfig {\n    /**\n     * The multi-factor auth configuration.\n     */\n    get multiFactorConfig() {\n        return this.multiFactorConfig_;\n    }\n    /**\n     * The reCAPTCHA configuration.\n     */\n    get recaptchaConfig() {\n        return this.recaptchaConfig_;\n    }\n    /**\n     * Validates a project config options object. Throws an error on failure.\n     *\n     * @param request - The project config options object to validate.\n     */\n    static validate(request) {\n        if (!validator.isNonNullObject(request)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"UpdateProjectConfigRequest\" must be a valid non-null object.');\n        }\n        const validKeys = {\n            smsRegionConfig: true,\n            multiFactorConfig: true,\n            recaptchaConfig: true,\n            passwordPolicyConfig: true,\n            emailPrivacyConfig: true,\n        };\n        // Check for unsupported top level attributes.\n        for (const key in request) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `\"${key}\" is not a valid UpdateProjectConfigRequest parameter.`);\n            }\n        }\n        // Validate SMS Regions Config if provided.\n        if (typeof request.smsRegionConfig !== 'undefined') {\n            auth_config_1.SmsRegionsAuthConfig.validate(request.smsRegionConfig);\n        }\n        // Validate Multi Factor Config if provided\n        if (typeof request.multiFactorConfig !== 'undefined') {\n            auth_config_1.MultiFactorAuthConfig.validate(request.multiFactorConfig);\n        }\n        // Validate reCAPTCHA config attribute.\n        if (typeof request.recaptchaConfig !== 'undefined') {\n            auth_config_1.RecaptchaAuthConfig.validate(request.recaptchaConfig);\n        }\n        // Validate Password policy Config if provided\n        if (typeof request.passwordPolicyConfig !== 'undefined') {\n            auth_config_1.PasswordPolicyAuthConfig.validate(request.passwordPolicyConfig);\n        }\n        // Validate Email Privacy Config if provided.\n        if (typeof request.emailPrivacyConfig !== 'undefined') {\n            auth_config_1.EmailPrivacyAuthConfig.validate(request.emailPrivacyConfig);\n        }\n    }\n    /**\n     * Build the corresponding server request for a UpdateProjectConfigRequest object.\n     * @param configOptions - The properties to convert to a server request.\n     * @returns  The equivalent server request.\n     *\n     * @internal\n     */\n    static buildServerRequest(configOptions) {\n        ProjectConfig.validate(configOptions);\n        const request = {};\n        if (typeof configOptions.smsRegionConfig !== 'undefined') {\n            request.smsRegionConfig = configOptions.smsRegionConfig;\n        }\n        if (typeof configOptions.multiFactorConfig !== 'undefined') {\n            request.mfa = auth_config_1.MultiFactorAuthConfig.buildServerRequest(configOptions.multiFactorConfig);\n        }\n        if (typeof configOptions.recaptchaConfig !== 'undefined') {\n            request.recaptchaConfig = auth_config_1.RecaptchaAuthConfig.buildServerRequest(configOptions.recaptchaConfig);\n        }\n        if (typeof configOptions.passwordPolicyConfig !== 'undefined') {\n            request.passwordPolicyConfig = auth_config_1.PasswordPolicyAuthConfig.buildServerRequest(configOptions.passwordPolicyConfig);\n        }\n        if (typeof configOptions.emailPrivacyConfig !== 'undefined') {\n            request.emailPrivacyConfig = configOptions.emailPrivacyConfig;\n        }\n        return request;\n    }\n    /**\n     * The Project Config object constructor.\n     *\n     * @param response - The server side response used to initialize the Project Config object.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        if (typeof response.smsRegionConfig !== 'undefined') {\n            this.smsRegionConfig = response.smsRegionConfig;\n        }\n        //Backend API returns \"mfa\" in case of project config and \"mfaConfig\" in case of tenant config. \n        //The SDK exposes it as multiFactorConfig always.\n        if (typeof response.mfa !== 'undefined') {\n            this.multiFactorConfig_ = new auth_config_1.MultiFactorAuthConfig(response.mfa);\n        }\n        if (typeof response.recaptchaConfig !== 'undefined') {\n            this.recaptchaConfig_ = new auth_config_1.RecaptchaAuthConfig(response.recaptchaConfig);\n        }\n        if (typeof response.passwordPolicyConfig !== 'undefined') {\n            this.passwordPolicyConfig = new auth_config_1.PasswordPolicyAuthConfig(response.passwordPolicyConfig);\n        }\n        if (typeof response.emailPrivacyConfig !== 'undefined') {\n            this.emailPrivacyConfig = response.emailPrivacyConfig;\n        }\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     *\n     * @returns A JSON-serializable representation of this object.\n     */\n    toJSON() {\n        // JSON serialization\n        const json = {\n            smsRegionConfig: (0, deep_copy_1.deepCopy)(this.smsRegionConfig),\n            multiFactorConfig: (0, deep_copy_1.deepCopy)(this.multiFactorConfig),\n            recaptchaConfig: (0, deep_copy_1.deepCopy)(this.recaptchaConfig),\n            passwordPolicyConfig: (0, deep_copy_1.deepCopy)(this.passwordPolicyConfig),\n            emailPrivacyConfig: (0, deep_copy_1.deepCopy)(this.emailPrivacyConfig),\n        };\n        if (typeof json.smsRegionConfig === 'undefined') {\n            delete json.smsRegionConfig;\n        }\n        if (typeof json.multiFactorConfig === 'undefined') {\n            delete json.multiFactorConfig;\n        }\n        if (typeof json.recaptchaConfig === 'undefined') {\n            delete json.recaptchaConfig;\n        }\n        if (typeof json.passwordPolicyConfig === 'undefined') {\n            delete json.passwordPolicyConfig;\n        }\n        if (typeof json.emailPrivacyConfig === 'undefined') {\n            delete json.emailPrivacyConfig;\n        }\n        return json;\n    }\n}\nexports.ProjectConfig = ProjectConfig;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}