{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_METER } from './NoopMeter';\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nvar NoopMeterProvider = /** @class */function () {\n  function NoopMeterProvider() {}\n  NoopMeterProvider.prototype.getMeter = function (_name, _version, _options) {\n    return NOOP_METER;\n  };\n  return NoopMeterProvider;\n}();\nexport { NoopMeterProvider };\nexport var NOOP_METER_PROVIDER = new NoopMeterProvider();","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAkBA,SAASA,UAAU,QAAQ,aAAa;AAExC;;;;AAIA;EAAA,8BAIA;EAHEC,oCAAQ,GAAR,UAASC,KAAa,EAAEC,QAAiB,EAAEC,QAAuB;IAChE,OAAOJ,UAAU;EACnB,CAAC;EACH,wBAAC;AAAD,CAAC,EAJD;;AAMA,OAAO,IAAMK,mBAAmB,GAAG,IAAIJ,iBAAiB,EAAE","names":["NOOP_METER","NoopMeterProvider","_name","_version","_options","NOOP_METER_PROVIDER"],"sources":["/home/yadu/Music/Gifty/node_modules/@opentelemetry/api/src/metrics/NoopMeterProvider.ts"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter, MeterOptions } from './Meter';\nimport { MeterProvider } from './MeterProvider';\nimport { NOOP_METER } from './NoopMeter';\n\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nexport class NoopMeterProvider implements MeterProvider {\n  getMeter(_name: string, _version?: string, _options?: MeterOptions): Meter {\n    return NOOP_METER;\n  }\n}\n\nexport const NOOP_METER_PROVIDER = new NoopMeterProvider();\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}