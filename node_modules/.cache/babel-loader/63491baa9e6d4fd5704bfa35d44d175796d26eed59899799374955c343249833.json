{"ast":null,"code":"\"use strict\";\n\n// Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar _Gaxios_instances, _a, _Gaxios_urlMayUseProxy, _Gaxios_applyRequestInterceptors, _Gaxios_applyResponseInterceptors, _Gaxios_prepareRequest, _Gaxios_proxyAgent, _Gaxios_getProxyAgent;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Gaxios = void 0;\nconst extend_1 = __importDefault(require(\"extend\"));\nconst https_1 = require(\"https\");\nconst node_fetch_1 = __importDefault(require(\"node-fetch\"));\nconst querystring_1 = __importDefault(require(\"querystring\"));\nconst is_stream_1 = __importDefault(require(\"is-stream\"));\nconst url_1 = require(\"url\");\nconst common_1 = require(\"./common\");\nconst retry_1 = require(\"./retry\");\nconst stream_1 = require(\"stream\");\nconst uuid_1 = require(\"uuid\");\nconst interceptor_1 = require(\"./interceptor\");\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fetch = hasFetch() ? window.fetch : node_fetch_1.default;\nfunction hasWindow() {\n  return typeof window !== 'undefined' && !!window;\n}\nfunction hasFetch() {\n  return hasWindow() && !!window.fetch;\n}\nfunction hasBuffer() {\n  return typeof Buffer !== 'undefined';\n}\nfunction hasHeader(options, header) {\n  return !!getHeader(options, header);\n}\nfunction getHeader(options, header) {\n  header = header.toLowerCase();\n  for (const key of Object.keys((options === null || options === void 0 ? void 0 : options.headers) || {})) {\n    if (header === key.toLowerCase()) {\n      return options.headers[key];\n    }\n  }\n  return undefined;\n}\nclass Gaxios {\n  /**\n   * The Gaxios class is responsible for making HTTP requests.\n   * @param defaults The default set of options to be used for this instance.\n   */\n  constructor(defaults) {\n    _Gaxios_instances.add(this);\n    this.agentCache = new Map();\n    this.defaults = defaults || {};\n    this.interceptors = {\n      request: new interceptor_1.GaxiosInterceptorManager(),\n      response: new interceptor_1.GaxiosInterceptorManager()\n    };\n  }\n  /**\n   * Perform an HTTP request with the given options.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n  async request() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    opts = await __classPrivateFieldGet(this, _Gaxios_instances, \"m\", _Gaxios_prepareRequest).call(this, opts);\n    opts = await __classPrivateFieldGet(this, _Gaxios_instances, \"m\", _Gaxios_applyRequestInterceptors).call(this, opts);\n    return __classPrivateFieldGet(this, _Gaxios_instances, \"m\", _Gaxios_applyResponseInterceptors).call(this, this._request(opts));\n  }\n  async _defaultAdapter(opts) {\n    const fetchImpl = opts.fetchImplementation || fetch;\n    const res = await fetchImpl(opts.url, opts);\n    const data = await this.getResponseData(opts, res);\n    return this.translateResponse(opts, res, data);\n  }\n  /**\n   * Internal, retryable version of the `request` method.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n  async _request() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _b;\n    try {\n      let translatedResponse;\n      if (opts.adapter) {\n        translatedResponse = await opts.adapter(opts, this._defaultAdapter.bind(this));\n      } else {\n        translatedResponse = await this._defaultAdapter(opts);\n      }\n      if (!opts.validateStatus(translatedResponse.status)) {\n        if (opts.responseType === 'stream') {\n          let response = '';\n          await new Promise(resolve => {\n            (translatedResponse === null || translatedResponse === void 0 ? void 0 : translatedResponse.data).on('data', chunk => {\n              response += chunk;\n            });\n            (translatedResponse === null || translatedResponse === void 0 ? void 0 : translatedResponse.data).on('end', resolve);\n          });\n          translatedResponse.data = response;\n        }\n        throw new common_1.GaxiosError(`Request failed with status code ${translatedResponse.status}`, opts, translatedResponse);\n      }\n      return translatedResponse;\n    } catch (e) {\n      const err = e instanceof common_1.GaxiosError ? e : new common_1.GaxiosError(e.message, opts, undefined, e);\n      const {\n        shouldRetry,\n        config\n      } = await (0, retry_1.getRetryConfig)(err);\n      if (shouldRetry && config) {\n        err.config.retryConfig.currentRetryAttempt = config.retryConfig.currentRetryAttempt;\n        // The error's config could be redacted - therefore we only want to\n        // copy the retry state over to the existing config\n        opts.retryConfig = (_b = err.config) === null || _b === void 0 ? void 0 : _b.retryConfig;\n        return this._request(opts);\n      }\n      throw err;\n    }\n  }\n  async getResponseData(opts, res) {\n    switch (opts.responseType) {\n      case 'stream':\n        return res.body;\n      case 'json':\n        {\n          let data = await res.text();\n          try {\n            data = JSON.parse(data);\n          } catch (_b) {\n            // continue\n          }\n          return data;\n        }\n      case 'arraybuffer':\n        return res.arrayBuffer();\n      case 'blob':\n        return res.blob();\n      case 'text':\n        return res.text();\n      default:\n        return this.getResponseDataFromContentType(res);\n    }\n  }\n  /**\n   * By default, throw for any non-2xx status code\n   * @param status status code from the HTTP response\n   */\n  validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n  /**\n   * Encode a set of key/value pars into a querystring format (?foo=bar&baz=boo)\n   * @param params key value pars to encode\n   */\n  paramsSerializer(params) {\n    return querystring_1.default.stringify(params);\n  }\n  translateResponse(opts, res, data) {\n    // headers need to be converted from a map to an obj\n    const headers = {};\n    res.headers.forEach((value, key) => {\n      headers[key] = value;\n    });\n    return {\n      config: opts,\n      data: data,\n      headers,\n      status: res.status,\n      statusText: res.statusText,\n      // XMLHttpRequestLike\n      request: {\n        responseURL: res.url\n      }\n    };\n  }\n  /**\n   * Attempts to parse a response by looking at the Content-Type header.\n   * @param {FetchResponse} response the HTTP response.\n   * @returns {Promise<any>} a promise that resolves to the response data.\n   */\n  async getResponseDataFromContentType(response) {\n    let contentType = response.headers.get('Content-Type');\n    if (contentType === null) {\n      // Maintain existing functionality by calling text()\n      return response.text();\n    }\n    contentType = contentType.toLowerCase();\n    if (contentType.includes('application/json')) {\n      let data = await response.text();\n      try {\n        data = JSON.parse(data);\n      } catch (_b) {\n        // continue\n      }\n      return data;\n    } else if (contentType.match(/^text\\//)) {\n      return response.text();\n    } else {\n      // If the content type is something not easily handled, just return the raw data (blob)\n      return response.blob();\n    }\n  }\n  /**\n   * Creates an async generator that yields the pieces of a multipart/related request body.\n   * This implementation follows the spec: https://www.ietf.org/rfc/rfc2387.txt. However, recursive\n   * multipart/related requests are not currently supported.\n   *\n   * @param {GaxioMultipartOptions[]} multipartOptions the pieces to turn into a multipart/related body.\n   * @param {string} boundary the boundary string to be placed between each part.\n   */\n  async *getMultipartRequest(multipartOptions, boundary) {\n    const finale = `--${boundary}--`;\n    for (const currentPart of multipartOptions) {\n      const partContentType = currentPart.headers['Content-Type'] || 'application/octet-stream';\n      const preamble = `--${boundary}\\r\\nContent-Type: ${partContentType}\\r\\n\\r\\n`;\n      yield preamble;\n      if (typeof currentPart.content === 'string') {\n        yield currentPart.content;\n      } else {\n        yield* currentPart.content;\n      }\n      yield '\\r\\n';\n    }\n    yield finale;\n  }\n}\nexports.Gaxios = Gaxios;\n_a = Gaxios, _Gaxios_instances = new WeakSet(), _Gaxios_urlMayUseProxy = function _Gaxios_urlMayUseProxy(url) {\n  let noProxy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var _b, _c;\n  const candidate = new url_1.URL(url);\n  const noProxyList = [...noProxy];\n  const noProxyEnvList = ((_c = (_b = process.env.NO_PROXY) !== null && _b !== void 0 ? _b : process.env.no_proxy) === null || _c === void 0 ? void 0 : _c.split(',')) || [];\n  for (const rule of noProxyEnvList) {\n    noProxyList.push(rule.trim());\n  }\n  for (const rule of noProxyList) {\n    // Match regex\n    if (rule instanceof RegExp) {\n      if (rule.test(candidate.toString())) {\n        return false;\n      }\n    }\n    // Match URL\n    else if (rule instanceof url_1.URL) {\n      if (rule.origin === candidate.origin) {\n        return false;\n      }\n    }\n    // Match string regex\n    else if (rule.startsWith('*.') || rule.startsWith('.')) {\n      const cleanedRule = rule.replace(/^\\*\\./, '.');\n      if (candidate.hostname.endsWith(cleanedRule)) {\n        return false;\n      }\n    }\n    // Basic string match\n    else if (rule === candidate.origin || rule === candidate.hostname || rule === candidate.href) {\n      return false;\n    }\n  }\n  return true;\n}, _Gaxios_applyRequestInterceptors =\n/**\n * Applies the request interceptors. The request interceptors are applied after the\n * call to prepareRequest is completed.\n *\n * @param {GaxiosOptions} options The current set of options.\n *\n * @returns {Promise<GaxiosOptions>} Promise that resolves to the set of options or response after interceptors are applied.\n */\nasync function _Gaxios_applyRequestInterceptors(options) {\n  let promiseChain = Promise.resolve(options);\n  for (const interceptor of this.interceptors.request.values()) {\n    if (interceptor) {\n      promiseChain = promiseChain.then(interceptor.resolved, interceptor.rejected);\n    }\n  }\n  return promiseChain;\n}, _Gaxios_applyResponseInterceptors =\n/**\n * Applies the response interceptors. The response interceptors are applied after the\n * call to request is made.\n *\n * @param {GaxiosOptions} options The current set of options.\n *\n * @returns {Promise<GaxiosOptions>} Promise that resolves to the set of options or response after interceptors are applied.\n */\nasync function _Gaxios_applyResponseInterceptors(response) {\n  let promiseChain = Promise.resolve(response);\n  for (const interceptor of this.interceptors.response.values()) {\n    if (interceptor) {\n      promiseChain = promiseChain.then(interceptor.resolved, interceptor.rejected);\n    }\n  }\n  return promiseChain;\n}, _Gaxios_prepareRequest =\n/**\n * Validates the options, merges them with defaults, and prepare request.\n *\n * @param options The original options passed from the client.\n * @returns Prepared options, ready to make a request\n */\nasync function _Gaxios_prepareRequest(options) {\n  var _b, _c, _d, _e;\n  const opts = (0, extend_1.default)(true, {}, this.defaults, options);\n  if (!opts.url) {\n    throw new Error('URL is required.');\n  }\n  // baseUrl has been deprecated, remove in 2.0\n  const baseUrl = opts.baseUrl || opts.baseURL;\n  if (baseUrl) {\n    opts.url = baseUrl.toString() + opts.url;\n  }\n  opts.paramsSerializer = opts.paramsSerializer || this.paramsSerializer;\n  if (opts.params && Object.keys(opts.params).length > 0) {\n    let additionalQueryParams = opts.paramsSerializer(opts.params);\n    if (additionalQueryParams.startsWith('?')) {\n      additionalQueryParams = additionalQueryParams.slice(1);\n    }\n    const prefix = opts.url.toString().includes('?') ? '&' : '?';\n    opts.url = opts.url + prefix + additionalQueryParams;\n  }\n  if (typeof options.maxContentLength === 'number') {\n    opts.size = options.maxContentLength;\n  }\n  if (typeof options.maxRedirects === 'number') {\n    opts.follow = options.maxRedirects;\n  }\n  opts.headers = opts.headers || {};\n  if (opts.multipart === undefined && opts.data) {\n    const isFormData = typeof FormData === 'undefined' ? false : (opts === null || opts === void 0 ? void 0 : opts.data) instanceof FormData;\n    if (is_stream_1.default.readable(opts.data)) {\n      opts.body = opts.data;\n    } else if (hasBuffer() && Buffer.isBuffer(opts.data)) {\n      // Do not attempt to JSON.stringify() a Buffer:\n      opts.body = opts.data;\n      if (!hasHeader(opts, 'Content-Type')) {\n        opts.headers['Content-Type'] = 'application/json';\n      }\n    } else if (typeof opts.data === 'object') {\n      // If www-form-urlencoded content type has been set, but data is\n      // provided as an object, serialize the content using querystring:\n      if (!isFormData) {\n        if (getHeader(opts, 'content-type') === 'application/x-www-form-urlencoded') {\n          opts.body = opts.paramsSerializer(opts.data);\n        } else {\n          // } else if (!(opts.data instanceof FormData)) {\n          if (!hasHeader(opts, 'Content-Type')) {\n            opts.headers['Content-Type'] = 'application/json';\n          }\n          opts.body = JSON.stringify(opts.data);\n        }\n      }\n    } else {\n      opts.body = opts.data;\n    }\n  } else if (opts.multipart && opts.multipart.length > 0) {\n    // note: once the minimum version reaches Node 16,\n    // this can be replaced with randomUUID() function from crypto\n    // and the dependency on UUID removed\n    const boundary = (0, uuid_1.v4)();\n    opts.headers['Content-Type'] = `multipart/related; boundary=${boundary}`;\n    const bodyStream = new stream_1.PassThrough();\n    opts.body = bodyStream;\n    (0, stream_1.pipeline)(this.getMultipartRequest(opts.multipart, boundary), bodyStream, () => {});\n  }\n  opts.validateStatus = opts.validateStatus || this.validateStatus;\n  opts.responseType = opts.responseType || 'unknown';\n  if (!opts.headers['Accept'] && opts.responseType === 'json') {\n    opts.headers['Accept'] = 'application/json';\n  }\n  opts.method = opts.method || 'GET';\n  const proxy = opts.proxy || ((_b = process === null || process === void 0 ? void 0 : process.env) === null || _b === void 0 ? void 0 : _b.HTTPS_PROXY) || ((_c = process === null || process === void 0 ? void 0 : process.env) === null || _c === void 0 ? void 0 : _c.https_proxy) || ((_d = process === null || process === void 0 ? void 0 : process.env) === null || _d === void 0 ? void 0 : _d.HTTP_PROXY) || ((_e = process === null || process === void 0 ? void 0 : process.env) === null || _e === void 0 ? void 0 : _e.http_proxy);\n  const urlMayUseProxy = __classPrivateFieldGet(this, _Gaxios_instances, \"m\", _Gaxios_urlMayUseProxy).call(this, opts.url, opts.noProxy);\n  if (opts.agent) {\n    // don't do any of the following options - use the user-provided agent.\n  } else if (proxy && urlMayUseProxy) {\n    const HttpsProxyAgent = await __classPrivateFieldGet(_a, _a, \"m\", _Gaxios_getProxyAgent).call(_a);\n    if (this.agentCache.has(proxy)) {\n      opts.agent = this.agentCache.get(proxy);\n    } else {\n      opts.agent = new HttpsProxyAgent(proxy, {\n        cert: opts.cert,\n        key: opts.key\n      });\n      this.agentCache.set(proxy, opts.agent);\n    }\n  } else if (opts.cert && opts.key) {\n    // Configure client for mTLS\n    if (this.agentCache.has(opts.key)) {\n      opts.agent = this.agentCache.get(opts.key);\n    } else {\n      opts.agent = new https_1.Agent({\n        cert: opts.cert,\n        key: opts.key\n      });\n      this.agentCache.set(opts.key, opts.agent);\n    }\n  }\n  if (typeof opts.errorRedactor !== 'function' && opts.errorRedactor !== false) {\n    opts.errorRedactor = common_1.defaultErrorRedactor;\n  }\n  return opts;\n}, _Gaxios_getProxyAgent = async function _Gaxios_getProxyAgent() {\n  __classPrivateFieldSet(this, _a, __classPrivateFieldGet(this, _a, \"f\", _Gaxios_proxyAgent) || (await Promise.resolve().then(() => __importStar(require('https-proxy-agent')))).HttpsProxyAgent, \"f\", _Gaxios_proxyAgent);\n  return __classPrivateFieldGet(this, _a, \"f\", _Gaxios_proxyAgent);\n};\n/**\n * A cache for the lazily-loaded proxy agent.\n *\n * Should use {@link Gaxios[#getProxyAgent]} to retrieve.\n */\n// using `import` to dynamically import the types here\n_Gaxios_proxyAgent = {\n  value: void 0\n};","map":{"version":3,"mappings":"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","names":["fetch","hasFetch","window","node_fetch_1","hasWindow","hasBuffer","Buffer","hasHeader","options","header","getHeader","toLowerCase","key","Object","keys","headers","undefined","Gaxios","constructor","defaults","Map","interceptors","request","interceptor_1","response","opts","__classPrivateFieldGet","_request","_defaultAdapter","fetchImpl","fetchImplementation","res","url","data","getResponseData","translateResponse","translatedResponse","adapter","bind","validateStatus","status","responseType","Promise","resolve","on","chunk","common_1","e","err","message","shouldRetry","config","retryConfig","currentRetryAttempt","body","text","JSON","parse","arrayBuffer","blob","getResponseDataFromContentType","paramsSerializer","params","querystring_1","stringify","forEach","value","statusText","responseURL","contentType","get","includes","match","getMultipartRequest","multipartOptions","boundary","finale","currentPart","partContentType","preamble","content","exports","noProxy","candidate","url_1","noProxyList","noProxyEnvList","env","NO_PROXY","process","no_proxy","split","rule","push","trim","RegExp","test","toString","origin","startsWith","cleanedRule","replace","hostname","endsWith","href","_Gaxios_applyRequestInterceptors","promiseChain","interceptor","values","then","resolved","rejected","_Gaxios_applyResponseInterceptors","_Gaxios_prepareRequest","Error","baseUrl","baseURL","length","additionalQueryParams","slice","prefix","maxContentLength","size","maxRedirects","follow","multipart","isFormData","FormData","is_stream_1","readable","isBuffer","bodyStream","stream_1","method","proxy","HTTPS_PROXY","https_proxy","HTTP_PROXY","http_proxy","urlMayUseProxy","agent","HttpsProxyAgent","_a","agentCache","has","cert","set","https_1","errorRedactor","_Gaxios_getProxyAgent","__classPrivateFieldSet","_Gaxios_proxyAgent"],"sources":["../../src/gaxios.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}